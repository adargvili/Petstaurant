<link rel="stylesheet" href="~/css/menu.css" />
@model IEnumerable<Petstaurant.Models.Dish>

@{ ViewData["Title"] = "Index"; }

@if (Context.User.IsInRole("Admin"))
{
    <h1>Menu</h1>
    <p>
        <a type="button" style="font-weight:bold;" class="btn btn-warning btn-sm" asp-action="Create">Create New Dish</a>
    </p>}



<div class="navbar navbar-expand-md navbar-light" style="background:rgba(12, 11, 9, 0.2);">
    <div class="container-fluid">
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarTogglerDemo01" aria-controls="navbarTogglerDemo01" aria-expanded="false" aria-label="Toggle navigation" style="background-color: #FFC107">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarTogglerDemo01">
            <form id="dish-filter-form" asp-action="Search">

                <div class="row d-flex">
                    <div class="col-md-4">
                        <div class="p-1 input-group mb-3">
                            <span class="input-group-text" id="inputGroup-sizing-sm">Dish Name</span>
                            <input id="dishName" name="dishName" placeholder="Enter Dish Name" type="text" class="form-control" aria-label="Dish Input" aria-describedby="inputGroup-sizing-sm" autocomplete="off">
                        </div>
                    </div>

                    <div class="col-md-auto">
                        <div class="row row-cols-3">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" name="cities[]" value="Tel-Aviv" id="TLV-Check" style="background-color: #FFC107;" checked>
                                <label class="form-check-label search-texts" for="flexCheckDefault">
                                    Tel-Aviv
                                </label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" name="cities[]" value="Beer-Sheva" id="BS-Check" style="background-color: #FFC107;" checked>
                                <label class="form-check-label search-texts" for="flexCheckDefault">
                                    Beer-Sheva
                                </label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" name="cities[]" value="Jerusalem" id="Jer-Check" style="background-color: #FFC107;" checked>
                                <label class="form-check-label search-texts" for="flexCheckDefault">
                                    Jerusalem
                                </label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" name="cities[]" value="Kiryat-Malachi" id="KM-Check" style="background-color: #FFC107;" checked>
                                <label class="form-check-label search-texts" for="flexCheckDefault">
                                    Kiryat-Malachi
                                </label>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-auto">
                        <div class="p-1">
                            <select class="form-select" id="selectFoodType" name="selectFoodType" aria-label=".form-select-sm example">
                                <option value=@null selected>Food Group</option>
                                <option value="Poultry">Poultry</option>
                                <option value="Fish">Fish</option>
                                <option value="Beef">Beef</option>
                                <option value="Vegetarian">Vegetarian</option>
                                <option value="Dessert">Dessert</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-md-1">
                        <div class="p-1">
                            <input type="submit" value="Search" class="btn btn-warning" style="font-weight:bold;" />
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>



<div class="row toLoad">

    @if (Context.User.IsInRole("Admin"))
    {
        <table class="table">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.FoodGroup)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Description)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Price)
                    </th>
                    <th>
                        @Html.Label("Availability")
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Created)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Image)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.FoodGroup.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Description)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Price)
                        </td>
                        <td>
                            @for (int i = 0; i < item.Store.Count; i++)
                            {
                                @Html.DisplayFor(modelItem => item.Store[i].City);
                                if (i != item.Store.Count - 1)
                                {
                                    @Html.Label(",");
                                }
                            }
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Created)
                        </td>
                        <td>
                            @if (item.Image != null)
                            {
                                string img = Convert.ToBase64String(item.Image);
                                <img src="data:image/png;base64,@img" width="50" height="50" />
                            }

                        </td>
                        <td>
                            <a style="color: #FFC107 !important;" asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                            <a style="color: #FFC107 !important;" data-bs-toggle="modal" data-bs-target="#detmodal" asp-route-id="@item.Id">Customer View</a> |
                            <a style="color: #FFC107 !important;" asp-action="Delete" asp-route-id="@item.Id">Delete</a>

                            <div class="modal fade" id="detmodal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true" style="color:black;">
                                <div class="modal-dialog">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title" id="exampleModalLabel">Customer Menu View</h5>
                                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                        </div>
                                        <!--Modal body-->
                                        <div class="modal-body d-flex justify-content-center">
                                            <div class="card text-center mb-3">
                                                @if (item.Image != null)
                                                {
                                                    string img = Convert.ToBase64String(item.Image);
                                                    <img src="data:image/png;base64,@img" class="card-img-top" alt="..." />}

                                                <div class="card-body">
                                                    <h3 class="card-title"> @Html.DisplayFor(modelItem => item.Name)</h3>
                                                    <p class="card-text">@Html.DisplayFor(modelItem => item.Description)</p>
                                                </div>
                                                <ul class="list-group list-group-flush card-items">
                                                    <li class="list-group-item"><h4>Main ingredient</h4> @Html.DisplayFor(modelItem => item.FoodGroup.Name)</li>
                                                    <li class="list-group-item"><h4>Price</h4> @Html.DisplayFor(modelItem => item.Price)</li>

                                                    <li class="list-group-item st-ad">
                                                        <h4>Availability</h4>
                                                        @for (int i = 0; i < item.Store.Count; i++)
                                                        {


                                                            @Html.DisplayFor(modelItem => item.Store[i].Address);
                                                            if (i != item.Store.Count - 1)
                                                            {

                                                                @Html.Label("||");

                                                            }



                                                        }
                                                    </li>

                                                </ul>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </td>

                    </tr>
                }

            </tbody>
        </table>
    }




    else
    {
        @foreach (var item in Model)
        {


            <div class="col-lg-3 d-flex justify-content-center">
                <div class="card text-center mb-3">
                    @if (item.Image != null)
                    {
                        string img = Convert.ToBase64String(item.Image);
                        <img src="data:image/png;base64,@img" class="card-img-top" alt="..." />}

                    <div class="card-body">
                        <h3 class="card-title"> @Html.DisplayFor(modelItem => item.Name)</h3>
                        <p class="card-text">@Html.DisplayFor(modelItem => item.Description)</p>
                    </div>
                    <ul class="list-group list-group-flush card-items">
                        <li class="list-group-item"><h4>Main ingredient</h4> @Html.DisplayFor(modelItem => item.FoodGroup.Name)</li>
                        <li class="list-group-item"><h4>Price</h4> @Html.DisplayFor(modelItem => item.Price)</li>

                        <li class="list-group-item st-ad">
                            <h4>Availability</h4>
                            @for (int i = 0; i < item.Store.Count; i++)
                            {


                                @Html.DisplayFor(modelItem => item.Store[i].Address);
                                if (i != item.Store.Count - 1)
                                {

                                    @Html.Label("||");

                                }



                            }
                        </li>

                    </ul>
                    <div class="card-body">
                        <a id="@item.Id" asp-action="AddDishToCart" asp-controller="Carts" asp-route-id="@item.Id" class="addToCart btn btn-warning job" style="color:black; font-weight:bold;">Add to cart</a>
                    </div>
                </div>
            </div>}}
</div>

@if (Context.User.Identity.IsAuthenticated)
{
    <input type="hidden" id="logged" value="true" />
}
else
{
    <input type="hidden" id="logged" value="false" />
}


<!-- Modal -->
<div class="modal fade" id="notLoggedIn" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" style="color:black" id="ModalLabel">You are not logged in</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div style="color:black" class="modal-body">
                Please Login or Register
            </div>
            <div class="modal-footer">
                <a asp-controller="Users" asp-action="Login" class="btn btn-warning" style="font-weight:bold;">Login</a>
                <a asp-controller="Users" asp-action="Register" class="btn btn-warning" style="font-weight:bold;">Register</a>
            </div>
        </div>
    </div>
</div>



@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="~/js/cart.js"></script>
    <script src="~/js/searchMenu.js"></script>
}


